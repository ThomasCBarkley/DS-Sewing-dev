#!/usr/local/bin/perl
#

# Version number
$version="2.1";

$host_addr='altercom.com';
$hp='';

# Location of the HTML form
$formpage="/popmail.html";

# SMTP host for delivering mail, set this to a LOCAL host!
$smtphost=$host_addr;

# Where should E-mail errors go? CHANGE THIS!
$errors='webmaster@$host_addr';

print "Content-type: text/html\n\n";

use Socket;
$SIG{ALRM} = 'timeout';
$qprintable=0;

&readform;

$user=$form{"user"};
$passwd=$form{"password"};
$passwd=uuencode($passwd) if($form{"txtpwd"});
# $remote=$form{"pophost"};
$remote = $host_addr;
# $mailbox=$form{"mailbox"};
$mailbox = "";

$mailbox="" if ($mailbox eq "default");
$port=110; # POP3 tcp/ip port
$sport=25; # SMTP tcp/ip port

Die("You have to specify a username and password.\n")
                                if((!($user)) || (!($passwd)));


&popconnect;
&poplogin;
&popstat;

if($compose=$form{"compose"}) {
	$message=$form{"message"};
	$message=-1 if(!$message);
	if($smtpto=$form{"smtpto"}) {
		&header("Sending message for $user\@$remote");
		&buttons;
		print "<HR size=3 noshade>\n\n";

		$smtpsubj=$form{"smtpsubj"};
		$smtpsubj="(no subject)" if(!$smtpsubj);
		$fullname=$form{"fullname"};
		$smtpref=$form{"smtpref"};
		$smtpdate=$form{"smtpdate"};
		$smtpfrom=$form{"smtpfrom"};
		$smtpcc=$form{"smtpcc"};
		$smtptext=$form{"smtptext"};
		$smtpself=$form{"smtpself"};

		Die("Only addresses of the form user\@host.domain can be accepted.\n") if(!is_email($smtpto) || !is_email($smtpfrom));
		Die("Only addresses of the form user\@host.domain can be accepted.\n") if($smtpcc && !is_email($smtpcc));

		$smtpcc =~ s/\s+/, /go;
		$smtpcc.=", " if($smtpcc && $smtpself);
		$smtpcc.=$smtpfrom if($smtpself);

		&smtpconnect;
		&smtpsend;
		&smtplogout;

		print "<HR size=3 noshade>\n\n";
		print "The above message was successfully sent.<P>\n";
		&buttons;

	} else {
		&header("Composing message for $user\@$remote");
		&buttons;
		print "<HR size=3 noshade>\n\n";
		&smtpform(-1);
		print "<HR size=3 noshade>\n\n";
		&buttons;
	}
} elsif($reply=$form{"reply"}) {
	$message=$reply;
	&header("Reply to message $reply/$num of $user\@$remote $mailbox");
	$quote=$form{"quote"};
	&buttons;
	print "<HR size=3 noshade>\n\n";
	&smtpform($reply);
	print "<HR size=3 noshade>\n\n";
	&buttons;
} elsif($delete=$form{"delete"}) {
	&header("Delete $delete/$num of $user\@$remote $mailbox");
	$message=$delete;
	&popdelete($delete);
	print "<HR size=3 noshade>\n\n";
	&buttons;
} elsif($message=$form{"message"}) {
	&header("Message $message/$num of $user\@$remote $mailbox");
	&buttons;
	print "<HR size=3 noshade>\n\n";
	&popread($message);
	print "<HR size=3 noshade>\n\n";
	&buttons;
} else {
	&header("Mailbox $mailbox of $user\@$host_addr");
	&indexbuttons;
	print "<HR size=3 noshade>\n\n";
	&popindex;
	print "<HR size=3 noshade>\n\n";
	&indexbuttons;
}
print "<HR size=3 noshade>\n\n";
&footer;
&poplogout;

exit;


sub uuencode {
	local($uue);
	$uue = pack("u",$_[0]);
	chomp $uue;
	$uue=~s/>/~~gt~~/go;
	$uue=~s/</~~lt~~/go;
	$uue=~s/"/~~qt~~/go;
	$uue;
}

sub uudecode {
	local($tmp,$uud);
	$tmp=$_[0];
	$tmp=~s/~~gt~~/>/go;
	$tmp=~s/~~lt~~/</go;
	$tmp=~s/~~qt~~/"/go;
	$uud = unpack("u",$tmp);
	$uud;
}

sub smtpconnect {
	   $action="initializing connect";
	   $server=$smtphost;
	   alarm 60;
           $sockaddr = 'S n a4 x8';
           chomp($hostname = 'smtp.$host_addr');

           ($name, $aliases, $proto) = getprotobyname('tcp');
           ($name, $aliases, $sport) = getservbyname($sport, 'tcp')
               unless $sport =~ /^\d+$/;
           ($name, $aliases, $type, $len, $thisaddr) = gethostbyname($hostname);
           ($name, $aliases, $type, $len, $thataddr) = gethostbyname($smtphost);

           $this = pack($sockaddr, AF_INET, 0, $thisaddr);
           $that = pack($sockaddr, AF_INET, $sport, $thataddr);

           socket(SMTP, PF_INET, SOCK_STREAM, $proto) || Die("smtp socket: $!");
           bind(SMTP, $this) || Die("smtp bind: $!");

           connect(SMTP, $that) || Die("smtp connect: $!");
           select(SMTP); $| = 1; select(STDOUT);
	   alarm 0;
	   smtpwait("connecting");
           print SMTP "helo $host_addr\r\n";
	   smtpwait("shaking hands");
}

sub popconnect {
	   $action="initializing connect";
	   $server=$remote;
	   alarm 60;
           $sockaddr = 'S n a4 x8';
           chomp($hostname = 'pop.$host_addr');

           ($name, $aliases, $proto) = getprotobyname('tcp');
           ($name, $aliases, $port) = getservbyname($port, 'tcp')
               unless $port =~ /^\d+$/;
           ($name, $aliases, $type, $len, $thisaddr) = gethostbyname($hostname);
           ($name, $aliases, $type, $len, $thataddr) = gethostbyname($remote);

           $this = pack($sockaddr, AF_INET, 0, $thisaddr);
           $that = pack($sockaddr, AF_INET, $port, $thataddr);

           socket(POP, PF_INET, SOCK_STREAM, $proto) || Die("pop socket: $!");
           bind(POP, $this) || Die("pop bind: $!");

           connect(POP, $that) || Die("pop connect: $!");

           select(POP); $| = 1; select(STDOUT);
	   alarm 0;
}

sub poplogin {

	waitforline("connecting");
	print POP "user $user\n";
	waitforline("sending username");
	print POP "pass " . uudecode($passwd) . "\n";
	waitforline("sending password");
	if($mailbox) {
		print POP "mbox $mailbox\n";
		waitforline("changing mailbox");
	}
}

sub popstat {

	print POP "stat\n";
	$_=waitforline("getting mailbox status");
	($stat,$num,$bytes)=split;
}

sub popindex {
	local($i,$v);
	if($num<1) {
		print "Mailbox $mailbox is empty.\n";
		return;
	}
	print POP "list\n";
	waitforline("reading index");
	alarm 60;
	loop: while(<POP>) {
		chomp;
		last loop if(/^\.[^\.]/o);
		s/^\.\./\./o if (/^\.\./o);
		($i,$v)=split;
		$size[$i]=$v;
	}
	alarm 0;
	print "<TABLE border=1>\n";
	print "<tr><th></th><th>From</th>     <th><I>Subject</I></th>     ";
	print "<th>Date</th>     <th>Size</th></tr>\n";
	for($i=1;$i<=$#size;$i++) {
		print POP "top $i 1\n";
		waitforline("reading header of message " . $i);
		alarm 60;
		loop: while(<POP>) {
			chomp;
			last loop if(/^\.[^\.]/o);
			s/^\.\./\./o if (/^\.\./o);
			$from[$i]=$foo if(($foo)=/^From:\s+(.*)/o);
			$date[$i]=$foo if(($foo)=/^Date:\s+(.*)/o);
			$subject[$i]=$foo if(($foo)=/^Subject:\s+(.*)/o);
		}
		alarm 0;
		print "<tr>\n";
		print "<FORM METHOD=POST ACTION=\"".$ENV{"SCRIPT_NAME"}."\">\n";
		print "<INPUT TYPE=hidden NAME=user     VALUE=\"$user\">\n";
		print "<INPUT TYPE=hidden NAME=password VALUE=\"$passwd\">\n";
		print "<INPUT TYPE=hidden NAME=pophost  VALUE=\"$remote\">\n";
		print "<INPUT TYPE=hidden NAME=message  VALUE=\"$i\">\n";
		print "<INPUT TYPE=hidden NAME=mailbox  VALUE=\"$mailbox\">\n"
								if($mailbox);
		print "<td><INPUT TYPE=submit VALUE=\"$i\"></td>\n";
		print "</FORM>\n";
		print "<td>" . escape($from[$i]) . "\n";
		print "<td><I>" . escape($subject[$i]) . "</I>\n";
		print "<td>" . escape($date[$i]) . "\n";
		print "<td>" . escape($size[$i]) . " bytes\n\n";
	}
	print "</TABLE>\n";
}

sub popread {
	local($num)=$_[0];
	print POP "retr $num\n";
	waitforline("reading message $num");
	print "<PRE>\n";
	alarm 60;
	loop: while(<POP>) {
		last loop if(/^\.[^\.]/o);
		s/^\.\./\./o if (/^\.\./o);
		$qprintable=1
			if (/Content-transfer-encoding: quoted-printable/io);
		print escape($_);
	}
	alarm 0;
	print "</PRE>\n";
}

sub smtplogout {
	print SMTP "quit\r\n";
	smtpwait("logging out");
}

sub poplogout {
	if(!$delete && $num>0) {
# Some (novell) servers delete all viewed messages, so we have to do a reset.
		print POP "rset\n";
		waitforline("resetting mailbox");
	}
	print POP "quit\n";
	waitforline("logging out");
}

sub timeout {
	Die("<H2>TIMEOUT</H2>\nServer $server timed out during $action.\n");
}

sub waitforline {
	$action=$_[0];
	$server=$remote;
	alarm 30;
	line: while(<POP>) {
		if (/^-ERR/o) {
			s/^-ERR //o;
			Die("ERROR while $action: $_");
		}
		last line if (/^\+OK/o);
	}
	alarm 0;
	$_;
}

sub smtpwait {
	$action=$_[0];
	$server=$smtphost;
	alarm 30;
	local($line);
	recv(SMTP,$line,255,0);
	local($stat,$rest)=split(/\s+/o,$line,2);
	Die("ERROR while $action: $line") if($stat >= 500);
	alarm 0;
	$line;
}

sub readform {
	local($bytes,$readbytes,$rest,$string,@pairs,$pair,$name,$value);
	Die("Only POST type is supported.\n")
		if ($ENV{"REQUEST_METHOD"} ne "POST");
	Die("Content type not supported.\n")
	      if ($ENV{"CONTENT_TYPE"} ne "application/x-www-form-urlencoded");

	$bytes=$ENV{"CONTENT_LENGTH"};
	$readbytes=0;
	$rest=$bytes;
	$string="";

	while($readbytes<$bytes) {
		$readbytes+=read(STDIN,$string,$rest,$readbytes);
	}

	@pairs = split(/\&/o,$string);

	foreach $pair (@pairs) {
		($name,$value)=split(/=/o,$pair);
		$form{urldecode($name)}=urldecode($value);
	}
}

sub urldecode {
	local(@tokens,$tok,$res);
	$_[0]=~s/\+/ /go;
	@tokens=split(/(%..)/o,$_[0]);
	foreach $tok (@tokens) {
		if($tok =~ /^%/o) {
			$tok=pack("H2",substr($tok,1,2));
		}
		$res .= $tok;
	}
	$res;
}

sub unquoted {
	local(@tokens,$tok,$res);
	@tokens=split(/(=[A-Ea-e0-9][A-Ea-e0-9])/o,$_[0]);
	foreach $tok (@tokens) {
		if($tok =~ /^=[A-Ea-e0-9][A-Ea-e0-9]/o) {
			$tok=pack("H2",substr($tok,1,2));
		}
		$res .= $tok;
	}
	$res;
}

sub Die {
	print @_;
	exit;
}

sub escape {
	$_ = $_[0];
	if($qprintable) {
		s/=(.)$/$1/o;
		$_=&unquoted($_);
	}
	s/&/&amp;/go;
	s/>/&gt;/go;
	s/</&lt;/go;
	s/"/&quot;/go;
	return $_ if($_[1]);
# Why have mailto: links when we have SMTP! :)
#	s#([^()<>&;"'` ]+@[^()<>&;"'` ]+\.[a-z]+)#<A HREF="mailto:$1">$1</A>#go;
	s#([a-z]+://[^()<>&; ]+)#<A HREF="$1">$1</A>#go;
	$_;
}

sub header {
	print "<TITLE>" . escape($_[0],1) . "</TITLE>\n\n";
	print "<H2>" . escape($_[0],1) . "</H2>\n\n";
}

#sub footer {
#	print "<A HREF=\"$hp\">POPmail</A> version $version<BR>\n";
#}

sub buttons {
	local($i,$j)=($message+1,$message-1);
	$i-- if($delete);
	print "<TABLE BORDER=0>\n<TR>\n";
	if(!$reply && !$compose && !$delete) {
		print "<TD>\n";
		print "<FORM METHOD=POST ACTION=\"".$ENV{"SCRIPT_NAME"}."\">\n";
		print "<INPUT TYPE=hidden NAME=user     VALUE=\"$user\">\n";
		print "<INPUT TYPE=hidden NAME=password VALUE=\"$passwd\">\n";
		print "<INPUT TYPE=hidden NAME=pophost  VALUE=\"$remote\">\n";
		print "<INPUT TYPE=hidden NAME=reply    VALUE=\"$message\">\n";
		print "<INPUT TYPE=hidden NAME=mailbox  VALUE=\"$mailbox\">\n"
								if($mailbox);
		print "<INPUT TYPE=submit VALUE=\"Reply\">\n";
		print "</FORM>\n";
	}
	if(!$delete) {
		print "<TD>\n";
		print "<FORM METHOD=POST ACTION=\"".$ENV{"SCRIPT_NAME"}."\">\n";
		print "<INPUT TYPE=hidden NAME=user     VALUE=\"$user\">\n";
		print "<INPUT TYPE=hidden NAME=password VALUE=\"$passwd\">\n";
		print "<INPUT TYPE=hidden NAME=pophost  VALUE=\"$remote\">\n";
		print "<INPUT TYPE=hidden NAME=delete   VALUE=\"$message\">\n";
		print "<INPUT TYPE=hidden NAME=mailbox  VALUE=\"$mailbox\">\n"
								if($mailbox);
		print "<INPUT TYPE=submit VALUE=\"Delete\">\n";
		print "</FORM>\n";
	}
	if($j>0) {
		print "<TD>\n";
		print "<FORM METHOD=POST ACTION=\"".$ENV{"SCRIPT_NAME"}."\">\n";
		print "<INPUT TYPE=hidden NAME=user     VALUE=\"$user\">\n";
		print "<INPUT TYPE=hidden NAME=password VALUE=\"$passwd\">\n";
		print "<INPUT TYPE=hidden NAME=pophost  VALUE=\"$remote\">\n";
		print "<INPUT TYPE=hidden NAME=message  VALUE=\"$j\">\n";
		print "<INPUT TYPE=hidden NAME=mailbox  VALUE=\"$mailbox\">\n"
								if($mailbox);
		print "<INPUT TYPE=submit VALUE=\"Previous\">\n";
		print "</FORM>\n";
	}
	if(($compose || $delete) && $message>0 && $message<=$num) {
		print "<TD>\n";
		print "<FORM METHOD=POST ACTION=\"".$ENV{"SCRIPT_NAME"}."\">\n";
		print "<INPUT TYPE=hidden NAME=user     VALUE=\"$user\">\n";
		print "<INPUT TYPE=hidden NAME=password VALUE=\"$passwd\">\n";
		print "<INPUT TYPE=hidden NAME=pophost  VALUE=\"$remote\">\n";
		print "<INPUT TYPE=hidden NAME=message  VALUE=\"$message\">\n";
		print "<INPUT TYPE=hidden NAME=mailbox  VALUE=\"$mailbox\">\n"
								if($mailbox);
		print "<INPUT TYPE=submit VALUE=\"Read ($message/$num)\">\n";
		print "</FORM>\n";
	}
	if($i>0 && $i<=$num && !$delete) {
		print "<TD>\n";
		print "<FORM METHOD=POST ACTION=\"".$ENV{"SCRIPT_NAME"}."\">\n";
		print "<INPUT TYPE=hidden NAME=user     VALUE=\"$user\">\n";
		print "<INPUT TYPE=hidden NAME=password VALUE=\"$passwd\">\n";
		print "<INPUT TYPE=hidden NAME=pophost  VALUE=\"$remote\">\n";
		print "<INPUT TYPE=hidden NAME=message  VALUE=\"$i\">\n";
		print "<INPUT TYPE=hidden NAME=mailbox  VALUE=\"$mailbox\">\n"
								if($mailbox);
		print "<INPUT TYPE=submit VALUE=\"Next\">\n";
		print "</FORM>\n";
	}
	if(!$compose) {
		print "<TD>\n";
		print "<FORM METHOD=POST ACTION=\"".$ENV{"SCRIPT_NAME"}."\">\n";
		print "<INPUT TYPE=hidden NAME=user     VALUE=\"$user\">\n";
		print "<INPUT TYPE=hidden NAME=password VALUE=\"$passwd\">\n";
		print "<INPUT TYPE=hidden NAME=pophost  VALUE=\"$remote\">\n";
		print "<INPUT TYPE=hidden NAME=mailbox  VALUE=\"$mailbox\">\n"
								if($mailbox);
		print "<INPUT TYPE=hidden NAME=message  VALUE=\"$message\">\n";
		print "<INPUT TYPE=hidden NAME=compose  VALUE=\"1\">\n";
		print "<INPUT TYPE=submit VALUE=\"Compose\">\n";
		print "</FORM>\n";
	}
	print "<TD>\n";
	print "<FORM METHOD=POST ACTION=\"".$ENV{"SCRIPT_NAME"}."\">\n";
	print "<INPUT TYPE=hidden NAME=user     VALUE=\"$user\">\n";
	print "<INPUT TYPE=hidden NAME=password VALUE=\"$passwd\">\n";
	print "<INPUT TYPE=hidden NAME=pophost  VALUE=\"$remote\">\n";
	print "<INPUT TYPE=hidden NAME=mailbox  VALUE=\"$mailbox\">\n"
								if($mailbox);
	print "<INPUT TYPE=submit VALUE=\"Index\">\n";
	print "</FORM>\n";
	print "<TD>\n";
	print "<FORM METHOD=GET ACTION=\"$formpage\">\n";
	print "<INPUT TYPE=submit VALUE=\"Popcgi form\">\n";
	print "</FORM>\n";
	print "</TABLE>\n";
}

sub smtpform {
    local($nn)=($_[0]);
    local($new)=($nn<=0);
    if(!$new) {
	print POP "retr $nn\n";
	waitforline("reading message $nn");
	$server=$remote;
	alarm 60;
	loop: while(<POP>) {
		chomp;
		last loop if(/^\s*$/);
		s/^\.\./\./o if (/^\.\./o);
		$smtpto=$foo if(($foo)=/^Return-Path:\s+<(\S+)>/oi);
		$smtpto=&getaddress($_,$smtpto) if(/^From /oi);
		$smtpto=&getaddress($_,$smtpto) if(/^From:\s+/oi);
		$smtpto=&getaddress($_,$smtpto) if(/^Reply-To:\s+/oi);
		$smtpsubj=$foo if(($foo)=/^Subject:\s+(.*)/oi);
		$smtpref=$foo if(($foo)=/^Message-Id:*\s+<(.*)>/oi);
		$smtpdate=$foo if(($foo)=/^Date:\s+(.*)/oi);
		$qprintable=1
			if (/Content-transfer-encoding: quoted-printable/io);
	}
	$smtpsubj = "Re: " . $smtpsubj if($smtpsubj !~ /^Re:/io);
	$smtpto .= '@' . $remote if(($smtpto !~ /@/o) && ($smtpto !~ /!/o));


	if(!$quote) {
		print "<FORM METHOD=POST ACTION=\"".$ENV{"SCRIPT_NAME"}."\">\n";
		print "<INPUT TYPE=hidden NAME=user     VALUE=\"$user\">\n";
		print "<INPUT TYPE=hidden NAME=password VALUE=\"$passwd\">\n";
		print "<INPUT TYPE=hidden NAME=pophost  VALUE=\"$remote\">\n";
		print "<INPUT TYPE=hidden NAME=reply    VALUE=\"$reply\">\n";
		print "<INPUT TYPE=hidden NAME=quote    VALUE=\"1\">\n";
		print "<INPUT TYPE=hidden NAME=mailbox  VALUE=\"$mailbox\">\n"
								if($mailbox);
		print "<INPUT TYPE=submit VALUE=\"Quote original message\">\n";
		print "</FORM>\n";
		print "<P>\n";
	}
    }

    print "<FORM METHOD=POST ACTION=\"".$ENV{"SCRIPT_NAME"}."\">\n";
    print "<INPUT TYPE=hidden NAME=user     VALUE=\"$user\">\n";
    print "<INPUT TYPE=hidden NAME=password VALUE=\"$passwd\">\n";
    print "<INPUT TYPE=hidden NAME=pophost  VALUE=\"$remote\">\n";
    print "<INPUT TYPE=hidden NAME=message  VALUE=\"$message\">\n";
    print "<INPUT TYPE=hidden NAME=compose  VALUE=\"1\">\n";
    print "<INPUT TYPE=hidden NAME=mailbox  VALUE=\"$mailbox\">\n" if($mailbox);
    print "<INPUT TYPE=hidden NAME=smtpto   VALUE=\"$smtpto\">\n" if(!$compose);
    print "<INPUT TYPE=hidden NAME=smtpref  VALUE=\"$smtpref\">\n";
    print "<INPUT TYPE=hidden NAME=smtpdate VALUE=\"$smtpdate\">\n";

    print "<TABLE BORDER=0>\n";
    print "<TR>\n<TD>\nFrom (name):\n";
    print "<TD>\n<INPUT SIZE=40 NAME=fullname VALUE=\"\">\n";
    print "<TR>\n<TD>\nFrom (E-mail):\n";
    print "<TD>\n<INPUT SIZE=40 NAME=smtpfrom VALUE=\"$user\@$remote\">\n";
    if($compose) {
	print "<TR>\n<TD>\nTo (E-mail):\n";
	print "<TD>\n<INPUT SIZE=40 NAME=smtpto VALUE=\"$smtpto\">\n";
    } else {
	print "<TR>\n<TD>To:\n<TD>\n$smtpto\n";
    }
    print "<TR>\n<TD>\nSubject:\n";
    print "<TD>\n<INPUT SIZE=40 NAME=smtpsubj VALUE=\"$smtpsubj\">\n";
    print "<TR>\n<TD>\nCopy to self:\n";
    print "<TD>\n<INPUT TYPE=checkbox NAME=smtpself VALUE=\"yes\">\n";
    print "<TR>\n<TD>\nCc:\n";
    print "<TD>\n<INPUT SIZE=40 NAME=smtpcc VALUE=\"\">\n";
    print "</TABLE>\n\n<P>\n";
    print "<TEXTAREA NAME=smtptext COLS=75 ROWS=20>\n";
    if(!$new) {
	loop: while(<POP>) {
		last loop if(/^\.[^\.]/o);
		s/^\.\./\./o if (/^\.\./o);
		print "| " . escape($_,1) if($quote);
	}
    }
    alarm 0;
    print "</TEXTAREA>\n";
    print "<P>\n\n";
    print "<TABLE border=0>\n<TR>\n";
    print "<TD>\n<INPUT TYPE=submit VALUE=\"Send message\">\n";
    print "<TD>\n<INPUT TYPE=reset VALUE=\"Reset form\">\n";
    print "</FORM>\n\n";
    if(!$new && !$quote) {
	print "<TD>\n";
	print "<FORM METHOD=POST ACTION=\"".$ENV{"SCRIPT_NAME"}."\">\n";
	print "<INPUT TYPE=hidden NAME=user     VALUE=\"$user\">\n";
	print "<INPUT TYPE=hidden NAME=password VALUE=\"$passwd\">\n";
	print "<INPUT TYPE=hidden NAME=pophost  VALUE=\"$remote\">\n";
	print "<INPUT TYPE=hidden NAME=reply    VALUE=\"$reply\">\n";
	print "<INPUT TYPE=hidden NAME=quote    VALUE=\"1\">\n";
	print "<INPUT TYPE=hidden NAME=mailbox  VALUE=\"$mailbox\">\n"
								if($mailbox);
	print "<INPUT TYPE=submit VALUE=\"Quote original message\">\n";
	print "</FORM>\n";
    }
    print "</TABLE>\n\n";

}

sub getaddress {
	local($str,$old)=($_[0],$_[1]);
	local($email);
	$str =~ s/^[^:]+://o;
	return $email if(($email)=($str =~ /\s+<(\S+@\S+)>\s*/));
	return $email if(($email)=($str =~ /\s+(\S+@\S+)\s*/));
	return $old;
}

sub indexbuttons {
	print "<TABLE border=0>\n<TR>\n";
	print "<TD>\n";
	print "<FORM METHOD=POST ACTION=\"".$ENV{"SCRIPT_NAME"}."\">\n";
	print "<INPUT TYPE=hidden NAME=user     VALUE=\"$user\">\n";
	print "<INPUT TYPE=hidden NAME=password VALUE=\"$passwd\">\n";
	print "<INPUT TYPE=hidden NAME=pophost  VALUE=\"$remote\">\n";
	print "<INPUT TYPE=hidden NAME=mailbox  VALUE=\"$mailbox\">\n"
								if($mailbox);
	print "<INPUT TYPE=hidden NAME=message  VALUE=\"$message\">\n";
	print "<INPUT TYPE=hidden NAME=compose  VALUE=\"1\">\n";
	print "<INPUT TYPE=submit VALUE=\"Compose\">\n";
	print "</FORM>\n";
	print "<TD>\n";
	print "<FORM METHOD=GET ACTION=\"$formpage\">\n";
	print "<INPUT TYPE=submit VALUE=\"Popcgi form\">\n";
	print "</FORM>\n";
	print "</TABLE>\n";
}

sub smtpsend {

	$date=&timestr;
	print SMTP "mail from:$smtpfrom\n";
	smtpwait("specifying sender");
	print SMTP "rcpt to:$smtpto\n";
	smtpwait("specifying recipient");
	print SMTP "data\n";
	smtpwait("starting message text");

	print "<TABLE BORDER=0>\n";
	print SMTP "Received: from $ENV{'REMOTE_HOST'} by $hostname with POPCGI $version; $date\n";
	print SMTP "From: $smtpfrom";
	print "<TR><TD>From:<TD>$smtpfrom\n";
	print SMTP " ($fullname)" if($fullname);
	print "($fullname)" if($fullname);
	print SMTP "\r\nTo: $smtpto\r\n";
	print "<TR><TD>To:<TD>$smtpto\n";
	print SMTP "Errors-To: $errors\r\n" if($errors);
	print SMTP "Date: $date\r\n";
	print "<TR><TD>Date:<TD>$date\n";
	print SMTP "Subject: $smtpsubj\r\n";
	print "<TR><TD>Subject:<TD>$smtpsubj\n";
	print SMTP "Cc: $smtpcc\r\n" if($smtpcc);
	print "<TR><TD>Cc:<TD>$smtpcc\n" if($smtpcc);
	print "</TABLE>\n<P>\n";
	print SMTP "In-Reply-To: <$smtpref> at $smtpdate\r\n" if($smtpref);
	print SMTP "X-Mailer: HONZA\n";
	print SMTP "Comments: Authenticated sender is <$user\@$remote>\r\n";
	print SMTP "\r\n";
        $smtptext =~ s/\r\n/\n/go;
        @text=split(/\n/,$smtptext);
	print "<PRE>\n";
	foreach $line (@text) {
		print escape("$line\n",1);
		$line =~ s/^\./../o;
		print SMTP "$line\r\n";
	}
	print "</PRE>\n";

	print SMTP ".\r\n";
	smtpwait("sending message text");

}

sub timestr {
    @days=('Sun','Mon','Tue','Wed','Thu','Fri','Sat');
    @months=('Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct',
								'Nov','Dec');
    @epoch = localtime(0);
    $tzmin = $epoch[2] * 60 + $epoch[1];        # minutes east of GMT
    if ($tzmin > 0) {
        $tzmin = 24 * 60 - $tzmin;              # minutes west of GMT
        $tzmin -= 24 * 60 if $epoch[5] == 70;   # account for the date line
    }

    $tzmin/=60;

    if($tzmin<0) {
	$tz='+';
    } else {
	$tz='-';
    }
    $tz.='0' if(abs($tzmin)<10);
    $tz.= 100 * abs($tzmin);

    ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);

    $sec='0'.$sec if($sec<10);
    $min='0'.$min if($min<10);
    $hour='0'.$hour if($hour<10);
    $year+=1900;
    $year+=100 if($year<1950);

    "$days[$wday], $mday $months[$mon] $year $hour:$min:$sec $tz";
}

sub is_email {
	local($str)=$_[0];
	$_[0] =~ /\S+@[\S\.]+\.[\S\.]+/o;
}

sub popdelete {
	Die("ERROR: Delete number out of range!\n") if($_[0]<1 || $_[0]>$num);

	print POP "dele $_[0]\n";
	waitforline("deleting message $_[0]");
	print "Message $_[0] deleted successfully.\n";
	$num--;
}
